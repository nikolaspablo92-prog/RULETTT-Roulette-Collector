"""
–û–¢–õ–ê–î–ß–ò–ö API –û–î–ù–û–ì–û –°–¢–û–õ–ê
========================

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API —Å—Ç–æ–ª–∞.
"""

import json
import urllib.request
import urllib.parse
from datetime import datetime
from pathlib import Path

def debug_api():
    """–û—Ç–ª–∞–¥–∫–∞ API —Å—Ç–æ–ª–∞"""
    print("üîç –û–¢–õ–ê–î–ö–ê API –°–¢–û–õ–ê")
    print("=" * 20)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        with open('casino_setup.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return
    
    table_id = config.get('table_info', {}).get('table_id', 'roulettestura541')
    auth = config['api']['auth']
    
    print(f"üéØ –°—Ç–æ–ª: {table_id}")
    print(f"üîë JSESSIONID: {auth['jsessionid'][:50]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    try:
        base_url = "https://games.pragmaticplaylive.net/api/ui/statisticHistory"
        
        params = {
            'tableId': table_id,
            'numberOfGames': 10,
            'JSESSIONID': auth['jsessionid'],
            'ck': str(int(datetime.now().timestamp() * 1000)),
            'game_mode': 'lobby_desktop'
        }
        
        url = f"{base_url}?" + urllib.parse.urlencode(params)
        print(f"üåê URL: {url[:100]}...")
        
        req = urllib.request.Request(url)
        req.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36')
        req.add_header('Accept', 'application/json, text/plain, */*')
        req.add_header('Accept-Language', 'ru,en-US;q=0.9,en;q=0.8,lt;q=0.7')
        
        with urllib.request.urlopen(req, timeout=10) as response:
            status = response.getcode()
            content_type = response.headers.get('Content-Type', '')
            data = response.read().decode('utf-8')
            
            print(f"üìä Status: {status}")
            print(f"üìÑ Content-Type: {content_type}")
            print(f"üìè –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(data)} –±–∞–π—Ç")
            
            if status == 200:
                print("\nüîç –ü–ï–†–í–´–ï 500 –°–ò–ú–í–û–õ–û–í –û–¢–í–ï–¢–ê:")
                print("-" * 50)
                print(data[:500])
                print("-" * 50)
                
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON
                try:
                    json_data = json.loads(data)
                    print(f"\n‚úÖ JSON –≤–∞–ª–∏–¥–Ω—ã–π")
                    print(f"üîë –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è: {list(json_data.keys())}")
                    
                    if 'history' in json_data:
                        history = json_data['history']
                        print(f"üìä –ò—Å—Ç–æ—Ä–∏—è: {len(history)} –∑–∞–ø–∏—Å–µ–π")
                        
                        if history and len(history) > 0:
                            print(f"üéØ –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å:")
                            first_game = history[0]
                            print(f"   –ö–ª—é—á–∏: {list(first_game.keys())}")
                            print(f"   –î–∞–Ω–Ω—ã–µ: {json.dumps(first_game, indent=2, ensure_ascii=False)[:300]}...")
                    
                except json.JSONDecodeError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ JSON: {e}")
            else:
                print(f"‚ùå –ù–µ—É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    debug_api()