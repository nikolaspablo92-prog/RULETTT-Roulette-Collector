"""
–ü–†–û–°–¢–û–ô –ü–û–ò–°–ö–û–í–ò–ö API –ö–ê–ó–ò–ù–û (–ë–ï–ó –í–ù–ï–®–ù–ò–• –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô)
========================================================

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python.
"""

import urllib.request
import urllib.error
import json
import time
from datetime import datetime
from typing import Dict, List, Optional

class SimpleCasinoAPIFinder:
    """–ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫–æ–≤–∏–∫ API –∫–∞–∑–∏–Ω–æ"""
    
    def __init__(self):
        # –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–∞–∑–∏–Ω–æ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ API
        self.known_casinos = {
            'stake': {
                'name': 'Stake.com',
                'base_url': 'https://stake.com',
                'endpoints': [
                    '/_api/graphql',
                    '/api/v1/casino/games/history'
                ],
                'description': '–ö—Ä—É–ø–Ω–æ–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–µ –∫–∞–∑–∏–Ω–æ —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ API'
            },
            'bc_game': {
                'name': 'BC.Game', 
                'base_url': 'https://bc.game',
                'endpoints': [
                    '/api/casino/roulette/history',
                    '/api/v1/live-games'
                ],
                'description': '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–µ –∫–∞–∑–∏–Ω–æ'
            },
            'bustabit': {
                'name': 'Bustabit (–ø—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ API)',
                'base_url': 'https://www.bustabit.com',
                'endpoints': [
                    '/api/games/history'
                ],
                'description': '–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã—Ç—ã–π API (–Ω–µ —Ä—É–ª–µ—Ç–∫–∞, –Ω–æ —Ö–æ—Ä–æ—à–∏–π –ø—Ä–∏–º–µ—Ä)'
            }
        }
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞"""
        print("üîç –ü–†–û–°–¢–û–ô –ü–û–ò–°–ö–û–í–ò–ö API –ö–ê–ó–ò–ù–û")
        print("=" * 35)
        print("(–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python)\n")
        
        while True:
            print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
            print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–∞–∑–∏–Ω–æ")
            print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL")
            print("3. –ü–æ–∫–∞–∑–∞—Ç—å –≥–∞–π–¥ –ø–æ –ø–æ–∏—Å–∫—É API")
            print("4. –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—á–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
            print("0. –í—ã—Ö–æ–¥")
            
            choice = input("\n–í—ã–±–æ—Ä (0-4): ").strip()
            
            if choice == "1":
                self.test_known_casinos()
            elif choice == "2":
                self.test_custom_url()
            elif choice == "3":
                self.show_search_guide()
            elif choice == "4":
                self.show_working_examples()
            elif choice == "0":
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    
    def test_known_casinos(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–∞–∑–∏–Ω–æ"""
        print("\nüé∞ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ó–í–ï–°–¢–ù–´–• –ö–ê–ó–ò–ù–û")
        print("-" * 35)
        
        for casino_id, info in self.known_casinos.items():
            print(f"\nüìç {info['name']}")
            print(f"   {info['description']}")
            
            for endpoint in info['endpoints']:
                url = info['base_url'] + endpoint
                result = self.test_url(url)
                
                if result['success']:
                    print(f"   ‚úÖ {endpoint} - HTTP {result['status']}")
                    if result.get('is_api'):
                        print(f"      üéØ –ü–æ—Ö–æ–∂–µ –Ω–∞ API! –¢–∏–ø: {result.get('content_type')}")
                else:
                    print(f"   ‚ùå {endpoint} - {result['error']}")
                
                time.sleep(1.5)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    def test_custom_url(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ URL"""
        print("\nüîó –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û URL")
        print("-" * 40)
        
        base_url = input("–í–≤–µ–¥–∏—Ç–µ –±–∞–∑–æ–≤—ã–π URL –∫–∞–∑–∏–Ω–æ: ").strip()
        
        if not base_url:
            print("‚ùå URL –Ω–µ –≤–≤–µ–¥–µ–Ω")
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
        if not base_url.startswith(('http://', 'https://')):
            base_url = 'https://' + base_url
        
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ API endpoints
        common_endpoints = [
            '/api',
            '/api/v1',
            '/api/v2',
            '/api/casino',
            '/api/live',
            '/api/roulette',
            '/api/games',
            '/api/casino/roulette',
            '/api/live/roulette',
            '/_api',
            '/graphql'
        ]
        
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(common_endpoints)} —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö endpoints...")
        
        found_apis = []
        
        for endpoint in common_endpoints:
            url = base_url + endpoint
            result = self.test_url(url)
            
            if result['success']:
                status_icon = "üéØ" if result.get('is_api') else "‚úÖ"
                print(f"{status_icon} {endpoint} - HTTP {result['status']}")
                
                if result.get('is_api'):
                    found_apis.append((endpoint, result))
                    print(f"     üìä API –æ–±–Ω–∞—Ä—É–∂–µ–Ω! –¢–∏–ø: {result.get('content_type')}")
            else:
                print(f"‚ùå {endpoint} - {result['error']}")
            
            time.sleep(0.8)  # –ü–∞—É–∑–∞
        
        if found_apis:
            print(f"\nüéâ –ù–ê–ô–î–ï–ù–û {len(found_apis)} –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–• API:")
            for endpoint, result in found_apis:
                print(f"   ‚Ä¢ {base_url}{endpoint}")
                print(f"     –¢–∏–ø: {result.get('content_type', 'unknown')}")
        else:
            print("\nüòû API endpoints –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é —Å–∞–π—Ç–∞")
            print("   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω—É—é –∫–æ–Ω—Å–æ–ª—å (F12)")
            print("   3. –ü–æ–∏—â–∏—Ç–µ 'API' –∏–ª–∏ 'Developer' –Ω–∞ —Å–∞–π—Ç–µ")
            print("   4. –°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π")
    
    def test_url(self, url: str) -> Dict:
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL"""
        try:
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
            req = urllib.request.Request(
                url,
                headers={
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
                }
            )
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
            with urllib.request.urlopen(req, timeout=10) as response:
                status = response.getcode()
                content_type = response.headers.get('Content-Type', '').lower()
                
                # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ –±–∞–π—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                data = response.read(1024)  # –ü–µ—Ä–≤—ã–π –∫–∏–ª–æ–±–∞–π—Ç
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ API
                is_api = self._detect_api(data, content_type)
                
                return {
                    'success': True,
                    'status': status,
                    'content_type': content_type,
                    'is_api': is_api,
                    'data_preview': data.decode('utf-8', errors='ignore')[:200]
                }
        
        except urllib.error.HTTPError as e:
            return {
                'success': False,
                'error': f'HTTP {e.code}',
                'status': e.code
            }
        except urllib.error.URLError as e:
            return {
                'success': False,
                'error': f'URL Error: {e.reason}'
            }
        except Exception as e:
            return {
                'success': False,
                'error': f'Error: {str(e)}'
            }
    
    def _detect_api(self, data: bytes, content_type: str) -> bool:
        """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–≤–µ—Ç API"""
        try:
            text = data.decode('utf-8', errors='ignore').lower()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type
            if 'application/json' in content_type:
                return True
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            api_indicators = [
                '{"', '[{', '"data":', '"api":', '"result":',
                '"status":', '"error":', '"message":', 
                'graphql', 'mutation', 'query'
            ]
            
            return any(indicator in text for indicator in api_indicators)
            
        except:
            return False
    
    def show_search_guide(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–∞–π–¥ –ø–æ –ø–æ–∏—Å–∫—É API"""
        print("\nüìñ –ì–ê–ô–î –ü–û –ü–û–ò–°–ö–£ API –ö–ê–ó–ò–ù–û")
        print("-" * 30)
        print("""
üîç –ì–î–ï –ò–°–ö–ê–¢–¨ API:

1. üìÑ –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –°–ê–ô–¢–ê:
   ‚Ä¢ –ò—â–∏—Ç–µ —Ä–∞–∑–¥–µ–ª—ã: API, Developer, Integration
   ‚Ä¢ –û–±—ã—á–Ω–æ –≤ —Ñ—É—Ç–µ—Ä–µ —Å–∞–π—Ç–∞
   ‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã: casino.com/api-docs, casino.com/developers

2. üåê –ê–ù–ê–õ–ò–ó –ë–†–ê–£–ó–ï–†–ê:
   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ F12 (Developer Tools)
   ‚Ä¢ –í–∫–ª–∞–¥–∫–∞ Network (–°–µ—Ç—å)
   ‚Ä¢ –ò–≥—Ä–∞–π—Ç–µ –≤ —Ä—É–ª–µ—Ç–∫—É –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã
   ‚Ä¢ –ò—â–∏—Ç–µ XHR/Fetch —Å JSON –¥–∞–Ω–Ω—ã–º–∏

3. üîó –°–¢–ê–ù–î–ê–†–¢–ù–´–ï –ü–£–¢–ò:
   ‚Ä¢ /api, /api/v1, /api/v2
   ‚Ä¢ /rest/api, /_api, /graphql
   ‚Ä¢ /casino/api, /live/api, /games/api

4. üì± –ú–û–ë–ò–õ–¨–ù–´–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:
   ‚Ä¢ –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–µ API
   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç—Ä–∞—Ñ–∏–∫ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

5. ü§ù –û–§–ò–¶–ò–ê–õ–¨–ù–´–ï –ö–ê–ù–ê–õ–´:
   ‚Ä¢ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∑–∏–Ω–æ
   ‚Ä¢ –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
   ‚Ä¢ GitHub –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞–∑–∏–Ω–æ

‚öñÔ∏è –í–ê–ñ–ù–û:
‚Ä¢ –í—Å–µ–≥–¥–∞ —á–∏—Ç–∞–π—Ç–µ Terms of Service
‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
‚Ä¢ –ù–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–π—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —ç—Ç–∏—á–Ω–æ

üéØ –õ–£–ß–®–ò–ï –ö–ê–ù–î–ò–î–ê–¢–´:
‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ –∫–∞–∑–∏–Ω–æ (—á–∞—Å—Ç–æ –±–æ–ª–µ–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ)
‚Ä¢ –ö–∞–∑–∏–Ω–æ —Å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏
‚Ä¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã live –∏–≥—Ä (Evolution, Pragmatic Play)
        """)
    
    def show_working_examples(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—á–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        print("\nüéØ –ü–†–ò–ú–ï–†–´ –†–ê–ë–û–ß–ò–• API –ó–ê–ü–†–û–°–û–í")
        print("-" * 35)
        print("""
1. üé∞ STAKE.COM (GraphQL):
   URL: https://stake.com/_api/graphql
   –ú–µ—Ç–æ–¥: POST
   –î–∞–Ω–Ω—ã–µ: GraphQL query –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∏–≥—Ä

2. üé≤ BUSTABIT:
   URL: https://www.bustabit.com/api/games/history
   –ú–µ—Ç–æ–¥: GET
   –û—Ç–≤–µ—Ç: JSON —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∏–≥—Ä

3. üíé BC.GAME:
   URL: https://bc.game/api/casino/roulette/history
   –ú–µ—Ç–æ–¥: GET
   –û—Ç–≤–µ—Ç: –ò—Å—Ç–æ—Ä–∏—è —Ä—É–ª–µ—Ç–∫–∏

–ü–†–ò–ú–ï–† –ö–û–î–ê:
```python
import urllib.request
import json

url = "https://www.bustabit.com/api/games/history"
req = urllib.request.Request(url, headers={
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)'
})

try:
    with urllib.request.urlopen(req) as response:
        data = json.loads(response.read())
        print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(data)} –∑–∞–ø–∏—Å–µ–π")
        for game in data[:3]:
            print(f"Game {game['id']}: {game['bust_point']}")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞: {e}")
```

‚ö†Ô∏è –ü–†–ò–ú–ï–ß–ê–ù–ò–Ø:
‚Ä¢ –≠—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –º–æ–≥—É—Ç —É—Å—Ç–∞—Ä–µ—Ç—å
‚Ä¢ –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        """)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        finder = SimpleCasinoAPIFinder()
        finder.run()
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ API!")
        
    except KeyboardInterrupt:
        print("\n\nüëã –ü–æ–∏—Å–∫ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()