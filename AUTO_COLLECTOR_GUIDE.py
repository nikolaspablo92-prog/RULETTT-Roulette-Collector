"""
═══════════════════════════════════════════════════════════════════════
🎯 ПОШАГОВАЯ ИНСТРУКЦИЯ - АВТОМАТИЧЕСКИЙ СБОРЩИК ДАННЫХ
═══════════════════════════════════════════════════════════════════════

🎉 JavaScript код уже сгенерирован в файле: auto_collector_console_code.js

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 ШАГ 1: ОТКРОЙТЕ ФАЙЛ С КОДОМ
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Найдите файл: auto_collector_console_code.js
2. Откройте его в Блокноте или VS Code
3. Выделите весь код (Ctrl+A)
4. Скопируйте (Ctrl+C)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🌐 ШАГ 2: ОТКРОЙТЕ СТРАНИЦУ РУЛЕТКИ В OPERA
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Запустите Opera
2. Перейдите на страницу рулетки roulettestura541
3. Дождитесь полной загрузки страницы

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔧 ШАГ 3: ОТКРОЙТЕ КОНСОЛЬ РАЗРАБОТЧИКА
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Нажмите одну из комбинаций:
   • Ctrl + Shift + I
   • F12
   • ПКМ → "Просмотреть код элемента"

Перейдите на вкладку "Console" (Консоль)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🚀 ШАГ 4: ВСТАВЬТЕ КОД И ЗАПУСТИТЕ
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Кликните в поле ввода консоли
2. Вставьте скопированный код (Ctrl+V)
3. Нажмите Enter

Вы увидите:
┌────────────────────────────────────────────────────────────────┐
│ 🎰 АВТОМАТИЧЕСКИЙ СБОРЩИК ДАННЫХ ЗАПУЩЕН!                      │
│ ⏰ Обновление каждые 30 секунд                                 │
│ 📊 Максимум результатов: 100                                   │
│ ⏹️  Остановка: stopRouletteCollector()                        │
│ 📋 Экспорт данных: exportRouletteData()                        │
│ 📈 Показать статистику: showRouletteStats()                    │
│ 🗑️  Очистить данные: clearRouletteData()                      │
└────────────────────────────────────────────────────────────────┘

✅ СБОРЩИК РАБОТАЕТ! Он автоматически собирает данные каждые 30 секунд!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 ЧТО ДЕЛАЕТ АВТОСБОРЩИК:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Каждые 30 секунд:
   • Проверяет элемент рулетки по CSS селектору
   • Извлекает новые числа (0-36)
   • Определяет цвет (red/black/green)
   • Сохраняет в localStorage браузера
   • Показывает новые результаты в консоли

✅ В реальном времени показывает:
   🕐 10:30:15 🔴 25 - Всего: 1 результатов
   🕐 10:31:00 ⚫ 17 - Всего: 2 результатов
   🕐 10:31:45 🔴 14 - Всего: 3 результатов

✅ Сохраняет данные даже при:
   • Обновлении страницы
   • Закрытии вкладки
   • Перезапуске браузера

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🛠️ ДОСТУПНЫЕ КОМАНДЫ (В КОНСОЛИ БРАУЗЕРА):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1️⃣ showRouletteStats()
   Показывает текущую статистику:
   • Всего спинов
   • Распределение цветов (%)
   • Топ-5 самых частых чисел
   
   Пример:
   ┌────────────────────────────────────────────────────────┐
   │ 📊 СТАТИСТИКА СОБРАННЫХ ДАННЫХ                         │
   │ 🎰 Всего спинов: 45                                    │
   │                                                        │
   │ 🎨 Распределение цветов:                               │
   │   🔴 Красных: 20 (44.4%)                               │
   │   ⚫ Черных: 24 (53.3%)                                │
   │   🟢 Зеленых: 1 (2.2%)                                 │
   │                                                        │
   │ 🔥 Топ-5 чисел:                                        │
   │   1. 🔴 17: 3 раз                                      │
   │   2. ⚫ 24: 3 раз                                      │
   │   3. 🔴 14: 2 раз                                      │
   └────────────────────────────────────────────────────────┘

2️⃣ exportRouletteData()
   Экспортирует данные для Python:
   • Показывает JSON в консоли
   • Копирует в буфер обмена автоматически
   • Готов для вставки в roulette_console_data.json
   
   После выполнения просто нажмите Ctrl+V в текстовом файле!

3️⃣ stopRouletteCollector()
   Останавливает автоматический сбор:
   • Прекращает обновление каждые 30 секунд
   • Данные сохраняются
   • Можно экспортировать в любой момент

4️⃣ clearRouletteData()
   Очищает все собранные данные:
   • Удаляет из localStorage
   • Начинает сбор заново
   • Используйте для нового сеанса

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 КАК ЭКСПОРТИРОВАТЬ ДАННЫЕ ДЛЯ АНАЛИЗА В PYTHON:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

ВАРИАНТ 1 - Быстрый экспорт:
────────────────────────────

1. В консоли браузера введите:
   
   exportRouletteData()

2. Нажмите Enter

3. Данные автоматически скопируются в буфер обмена

4. Откройте файл: roulette_console_data.json

5. Вставьте данные (Ctrl+V)

6. Сохраните файл

7. Запустите в PowerShell:
   
   py console_to_analysis.py

✅ ГОТОВО! Вы увидите полный анализ с лучшими стратегиями!


ВАРИАНТ 2 - Ручной экспорт (если автокопирование не работает):
───────────────────────────────────────────────────────────────

1. В консоли браузера: exportRouletteData()

2. Скопируйте JSON из консоли вручную (выделите мышкой, Ctrl+C)

3. Вставьте в roulette_console_data.json

4. Запустите: py console_to_analysis.py

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💡 СОВЕТЫ ПО ИСПОЛЬЗОВАНИЮ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ РЕКОМЕНДАЦИИ:

1. Соберите минимум 50-100 спинов для точного анализа
   • 50 спинов = ~25-30 минут
   • 100 спинов = ~50-60 минут

2. Оставьте браузер открытым на странице рулетки
   • Сборщик работает в фоне
   • Можно свернуть окно
   • Данные сохраняются автоматически

3. Проверяйте статистику периодически:
   • showRouletteStats() - каждые 15-20 минут
   • Следите за распределением цветов
   • Ищите паттерны в частых числах

4. Экспортируйте и анализируйте регулярно:
   • После каждых 50 спинов
   • Сравнивайте результаты разных сеансов
   • Находите стабильные стратегии

5. Очищайте данные перед новым сеансом:
   • clearRouletteData()
   • Каждый сеанс = отдельный анализ
   • Сравнивайте разные периоды времени

⚠️ ВАЖНО:

• НЕ закрывайте вкладку во время сбора
• НЕ обновляйте страницу без необходимости
• Проверяйте что рулетка загружена полностью
• Если сборщик не видит числа - проверьте CSS селектор

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔄 ТИПИЧНЫЙ РАБОЧИЙ ПРОЦЕСС:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. УТРО (10:00):
   ├─ Откройте страницу рулетки
   ├─ Запустите автосборщик (вставьте код)
   ├─ Сверните браузер
   └─ Займитесь своими делами

2. ОБЕД (12:00):
   ├─ Откройте консоль
   ├─ showRouletteStats() - проверьте статистику
   ├─ Собрано ~60 спинов
   └─ Продолжайте сбор

3. ВЕЧЕР (14:00):
   ├─ showRouletteStats() - финальная проверка
   ├─ Собрано ~120 спинов ✅
   ├─ exportRouletteData() - экспорт
   ├─ Сохраните в roulette_console_data.json
   ├─ py console_to_analysis.py - анализ
   └─ Получите лучшие стратегии! 🎉

4. СЛЕДУЮЩИЙ ДЕНЬ:
   ├─ clearRouletteData() - очистите старые данные
   ├─ Запустите новый сбор
   └─ Сравните результаты с предыдущим днем

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 ПРИМЕР ПОЛНОГО ЦИКЛА (5 МИНУТ):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Шаг 1: Запуск сборщика (1 минута)
───────────────────────────────────
• Открыли Opera с рулеткой
• Ctrl+Shift+I → Console
• Вставили код из auto_collector_console_code.js
• Enter
✅ Сборщик запущен!

Шаг 2: Ожидание (30 минут - 2 часа)
────────────────────────────────────
• Браузер работает в фоне
• Сборщик собирает данные автоматически
• Каждые 30 секунд новое число

Шаг 3: Проверка статистики (30 секунд)
───────────────────────────────────────
• Открыли консоль
• showRouletteStats()
• Видим: 80 спинов собрано ✅

Шаг 4: Экспорт данных (1 минута)
─────────────────────────────────
• exportRouletteData()
• Данные скопированы
• Создали roulette_console_data.json
• Ctrl+V
• Сохранили

Шаг 5: Анализ в Python (2 минуты)
──────────────────────────────────
• py console_to_analysis.py
• Видим:
  ✅ Статистика по цветам
  ✅ Топ-5 чисел
  ✅ Лучшая стратегия: Мартингейл на черное (+8.5%)
  ✅ Худшая: Фиксированная на красное (-3.2%)

🎉 ГОТОВО! Теперь вы знаете какая стратегия работает лучше!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
❓ РЕШЕНИЕ ПРОБЛЕМ:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

ПРОБЛЕМА: Сборщик не находит элемент рулетки
РЕШЕНИЕ:
  1. Проверьте что страница полностью загружена
  2. Откройте консоль и выполните:
     document.querySelector(".game-area__history-line--Lkj9A")
  3. Если null - попробуйте упрощенный селектор:
     Измените в коде:
     selector: ".game-area__history-line"

ПРОБЛЕМА: Числа не собираются
РЕШЕНИЕ:
  1. Проверьте что рулетка крутится
  2. Подождите 1-2 минуты
  3. showRouletteStats() - проверьте счетчик

ПРОБЛЕМА: exportRouletteData() не копирует в буфер
РЕШЕНИЕ:
  1. Кликните на страницу рулетки (дайте фокус)
  2. Повторите exportRouletteData()
  3. Если не помогло - скопируйте JSON вручную из консоли

ПРОБЛЕМА: Python показывает ошибку при анализе
РЕШЕНИЕ:
  1. Проверьте формат JSON в файле
  2. Должно быть: [{"number": 6, "color": "black"}, ...]
  3. Убедитесь что скобки [ ] есть в начале и конце

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✅ БЫСТРАЯ ШПАРГАЛКА:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

В КОНСОЛИ БРАУЗЕРА:
───────────────────
showRouletteStats()        - Статистика
exportRouletteData()       - Экспорт для Python
stopRouletteCollector()    - Остановить
clearRouletteData()        - Очистить

В POWERSHELL:
─────────────
py console_to_analysis.py  - Анализ данных
py auto_console_collector.py - Сгенерировать новый код

ФАЙЛЫ:
──────
auto_collector_console_code.js  - JavaScript для браузера
roulette_console_data.json      - Ваши данные
console_analysis_report.txt     - Отчет

═══════════════════════════════════════════════════════════════════════
🎉 ВСЁ ГОТОВО! НАЧИНАЙТЕ СБОР ДАННЫХ!
═══════════════════════════════════════════════════════════════════════

1. Откройте auto_collector_console_code.js
2. Скопируйте код (Ctrl+A, Ctrl+C)
3. Откройте консоль в Opera на странице рулетки (Ctrl+Shift+I)
4. Вставьте код и нажмите Enter
5. Подождите 30-60 минут
6. exportRouletteData() и сохраните в JSON
7. py console_to_analysis.py
8. Наслаждайтесь результатами! 🚀

Удачи! 🍀
"""

if __name__ == "__main__":
    print(__doc__)
