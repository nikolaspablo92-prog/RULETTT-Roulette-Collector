"""
ИНСТРУКЦИИ ПО ПОИСКУ API ЧЕРЕЗ КОНСОЛЬ БРАУЗЕРА
===============================================

МЕТОД 1: Использование Developer Tools
"""

def show_console_instructions():
    print("""
🔍 КАК НАЙТИ API КАЗИНО ЧЕРЕЗ КОНСОЛЬ БРАУЗЕРА
============================================

📋 БЫСТРАЯ ИНСТРУКЦИЯ:

1. 🌐 ОТКРОЙТЕ КАЗИНО
   • Перейдите на сайт с live-рулеткой
   • Войдите в аккаунт (или играйте в демо)

2. 🔧 ОТКРОЙТЕ DEVELOPER TOOLS
   • Нажмите F12 (или Ctrl+Shift+I)
   • Выберите вкладку "Network" (Сеть)

3. 🎯 НАСТРОЙТЕ ФИЛЬТРЫ
   • Поставьте галочку на "XHR"
   • Поставьте галочку на "Fetch"
   • Уберите галочки с остального

4. 🎰 НАЧНИТЕ МОНИТОРИНГ
   • Нажмите кнопку записи (красный кружок)
   • Или просто начните взаимодействовать с сайтом

5. 🎲 ИГРАЙТЕ И НАБЛЮДАЙТЕ
   • Зайдите в live-рулетку
   • Подождите несколько спинов
   • Делайте ставки (если можете)
   • Смотрите на запросы в консоли

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎯 ЧТО ИСКАТЬ В ЗАПРОСАХ:

ХОРОШИЕ ПРИЗНАКИ:
✅ URL содержит: "roulette", "live", "game", "result"
✅ URL содержит: "history", "spin", "wheel", "bet"  
✅ Status: 200 (успешный ответ)
✅ Type: "xhr" или "fetch"
✅ Size: больше 100 bytes (содержит данные)

ПРИМЕРЫ ХОРОШИХ ЗАПРОСОВ:
• https://api.casino.com/live/roulette/results
• https://casino.com/api/games/12345/history
• https://live.casino.com/game-data/roulette
• wss://casino.com/live-feed (WebSocket)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📊 АНАЛИЗ НАЙДЕННЫХ ЗАПРОСОВ:

1. КЛИКНИТЕ НА ЗАПРОС
2. СПРАВА ОТКРОЕТСЯ ПАНЕЛЬ С ДЕТАЛЯМИ
3. ИЗУЧИТЕ:
   • Request URL (полный адрес)
   • Request Method (GET/POST)  
   • Response Headers
   • Response Body (ответ сервера)

ПРИМЕР ХОРОШЕГО ОТВЕТА:
{
  "gameId": "12345",
  "results": [35, 17, 2, 25, 34],
  "colors": ["black", "black", "black", "red", "red"],
  "timestamp": "2025-01-15T10:30:00Z"
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

⚠️ ЧАСТЫЕ ПРОБЛЕМЫ И РЕШЕНИЯ:

ПРОБЛЕМА: Не видно запросов
РЕШЕНИЕ: 
• Проверьте фильтры (XHR/Fetch)
• Обновите страницу с открытой консолью
• Попробуйте другой браузер (Chrome лучше всего)

ПРОБЛЕМА: Запросы есть, но непонятные
РЕШЕНИЕ:
• Смотрите Response вкладку
• Ищите JSON с числами/массивами
• Обращайте внимание на размер ответа

ПРОБЛЕМА: Ошибки CORS
РЕШЕНИЕ:
• Это нормально для браузера
• API все равно можно использовать в Python
• Скопируйте URL и заголовки

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🚀 ПОСЛЕ НАХОЖДЕНИЯ API:

1. СКОПИРУЙТЕ ВАЖНУЮ ИНФОРМАЦИЮ:
   • Полный URL запроса
   • Method (GET/POST)
   • Необходимые заголовки
   • Пример ответа

2. ЗАПУСТИТЕ НАСТРОЙКУ:
   python quick_api_setup.py

3. ВВЕДИТЕ НАЙДЕННЫЕ ДАННЫЕ

4. ПРОТЕСТИРУЙТЕ ПОДКЛЮЧЕНИЕ:
   python test_connection.py

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎰 СПЕЦИАЛЬНЫЕ СОВЕТЫ ДЛЯ РАЗНЫХ КАЗИНО:

EVOLUTION GAMING:
• Ищите запросы к "evolution" или "evo"
• Обычно WebSocket + REST API
• Данные в JSON формате

PRAGMATIC PLAY:  
• Ищите "pragmaticplay" в URL
• API часто требует токены
• Результаты в history endpoint

КРИПТОКАЗИНО (Stake, BC.Game):
• Часто открытые API
• Ищите "api/games" или "graphql"
• Могут использовать GraphQL вместо REST

ОБЫЧНЫЕ ЛИЦЕНЗИРОВАННЫЕ:
• Более защищенные API
• Требуют авторизацию
• Копируйте Cookie/Authorization заголовки

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 АЛЬТЕРНАТИВНЫЕ МЕТОДЫ:

ЕСЛИ API НЕ НАЙДЕН:
1. Попробуйте мобильную версию сайта
2. Поищите публичные API того же провайдера
3. Используйте scraping (парсинг HTML)
4. Настройте ручной ввод данных

WEBSOCKET СОЕДИНЕНИЯ:  
• Ищите тип "websocket" или "ws"
• URL начинается с "wss://" или "ws://"
• Содержат live-данные в реальном времени
• Сложнее в настройке, но очень эффективны

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ ГОТОВЫЕ КОМАНДЫ ДЛЯ ЗАПУСКА:

1. Подробная инструкция:
   python browser_api_guide.py

2. Быстрая настройка:  
   python quick_api_setup.py

3. Поиск известных API:
   python simple_api_finder.py

4. Тест подключения:
   python test_connection.py

5. Запуск системы:
   python src/main.py
    """)

if __name__ == "__main__":
    show_console_instructions()