"""
–£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –°–ë–û–†–©–ò–ö API –ò–ó –ë–†–ê–£–ó–ï–†–ê
====================================

–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª—é–±–æ–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π API
"""

import json
import urllib.request
import urllib.parse
from pathlib import Path

class UniversalAPISetup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API"""
    
    def __init__(self):
        self.config = {}
    
    def setup_multiple_casinos(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞–∑–∏–Ω–æ"""
        print("üé∞ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –ö–ê–ó–ò–ù–û")
        print("=" * 32)
        
        print("""
–£ –≤–∞—Å —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:
‚úÖ Paddy Power + Pragmatic Play Live (paddypower_config.json)
   ‚Ä¢ –†–∞–±–æ—á–∏–µ API —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
   ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è —Ä—É–ª–µ—Ç–∫–∏ (500 –∏–≥—Ä)
   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   
üÜï –ù–æ–≤–æ–µ –∫–∞–∑–∏–Ω–æ: Spin and Go Roulette
   ‚Ä¢ –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ API –≤ –±—Ä–∞—É–∑–µ—Ä–µ
   ‚Ä¢ –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∏–∑ Network tab
        """)
        
        choice = input("\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?\n1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Paddy Power (—É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)\n2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Spin and Go\n3. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∫–∞–∑–∏–Ω–æ\n–í—ã–±–æ—Ä (1-3): ").strip()
        
        if choice == '1':
            self.use_paddypower()
        elif choice == '2':
            self.setup_spinandgo()  
        elif choice == '3':
            self.setup_new_casino()
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    
    def use_paddypower(self):
        """–ò—Å–ø–æ–ª—å–∑—É–µ–º Paddy Power"""
        print("\n‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú PADDY POWER")
        print("-" * 23)
        
        try:
            # –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Paddy Power
            import shutil
            shutil.copy("paddypower_config.json", "casino_setup.json")
            
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Paddy Power –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            print("üéØ –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –æ–¥–Ω–∏–º —Å—Ç–æ–ª–æ–º: roulettestura541")
            
            print("\nüìã –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:")
            print("1. python test_connection.py - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
            print("2. python src/main.py - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def setup_spinandgo(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Spin and Go"""
        print("\nüéØ –ù–ê–°–¢–†–û–ô–ö–ê SPIN AND GO ROULETTE")
        print("-" * 33)
        
        print("""
–ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø SPIN AND GO:

1. üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
   https://casinopp-com-ngm.bfcdl.com/livedistributed/25.9.3.0/?game=sgrol&launch_alias=sgrol_spinandgorol&language=EN

2. üîß –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)
   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Network
   ‚Ä¢ –ü–æ—Å—Ç–∞–≤—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä XHR/Fetch

3. üé∞ –ü–æ–∏–≥—Ä–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç
   ‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–∏–Ω–æ–≤
   ‚Ä¢ –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –∑–∞–ø—Ä–æ—Å–∞–º–∏

4. üìã –ù–∞–π–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Å –¥–∞–Ω–Ω—ã–º–∏ —Ä—É–ª–µ—Ç–∫–∏
   ‚Ä¢ –ò—â–∏—Ç–µ URL —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ: result, history, spin, game
   ‚Ä¢ –ö–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª–Ω—ã–π URL –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        """)
        
        manual_setup = input("\n–ù–∞—à–ª–∏ API –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/n): ").lower()
        if manual_setup == 'y':
            self.collect_manual_api_info("Spin and Go Roulette")
        else:
            print("üí° –í–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–æ–≥–¥–∞ –Ω–∞–π–¥–µ—Ç–µ API –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    
    def setup_new_casino(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–∞–∑–∏–Ω–æ"""
        print("\nüÜï –ù–ê–°–¢–†–û–ô–ö–ê –ù–û–í–û–ì–û –ö–ê–ó–ò–ù–û")
        print("-" * 24)
        
        casino_name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–∑–∏–Ω–æ: ").strip()
        casino_url = input("URL –∫–∞–∑–∏–Ω–æ: ").strip()
        
        if casino_name and casino_url:
            self.collect_manual_api_info(casino_name, casino_url)
        else:
            print("‚ùå –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ URL")
    
    def collect_manual_api_info(self, casino_name, casino_url=""):
        """–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± API –≤—Ä—É—á–Ω—É—é"""
        print(f"\nüìù –ù–ê–°–¢–†–û–ô–ö–ê API –î–õ–Ø {casino_name.upper()}")
        print("=" * (15 + len(casino_name)))
        
        endpoints = {}
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
            "Accept": "application/json, text/plain, */*",
            "Accept-Language": "en-US,en;q=0.9"
        }
        
        print("üîó –î–û–ë–ê–í–õ–ï–ù–ò–ï API ENDPOINTS")
        print("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ API URLs (–ø–æ –æ–¥–Ω–æ–º—É, Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):")
        
        counter = 1
        while True:
            url = input(f"API URL #{counter} (–∏–ª–∏ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): ").strip()
            if not url:
                break
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø API
            print("–ß—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ—Ç API?")
            print("1. –ò—Å—Ç–æ—Ä–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä—É–ª–µ—Ç–∫–∏")
            print("2. –¢–µ–∫—É—â–∏–µ/live —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
            print("3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç–æ–ª–∞")
            print("4. –î—Ä—É–≥–æ–µ")
            
            api_type = input("–¢–∏–ø API (1-4): ").strip()
            
            type_names = {
                '1': 'history',
                '2': 'live_results', 
                '3': 'table_config',
                '4': f'api_{counter}'
            }
            
            endpoint_name = type_names.get(api_type, f'api_{counter}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω—ã –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            needs_auth = input("API —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏? (y/n): ").lower() == 'y'
            
            endpoint_info = {
                'url': url,
                'method': 'GET',
                'description': f'API endpoint {counter}'
            }
            
            if needs_auth:
                auth_header = input("Authorization header (–µ—Å–ª–∏ –µ—Å—Ç—å): ").strip()
                session_header = input("Session/Cookie header (–µ—Å–ª–∏ –µ—Å—Ç—å): ").strip()
                
                if auth_header:
                    headers['Authorization'] = auth_header
                if session_header:
                    headers['Cookie'] = session_header
            
            endpoints[endpoint_name] = endpoint_info
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {endpoint_name} -> {url}")
            counter += 1
        
        if endpoints:
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            config = {
                "casino_name": casino_name,
                "casino_url": casino_url,
                "connection_method": "api",
                "api": {
                    "base_url": self.extract_base_url(casino_url) if casino_url else "",
                    "endpoints": endpoints,
                    "headers": headers
                },
                "betting": {
                    "base_bet": 100,
                    "max_bet": 10000,
                    "bankroll": 100000
                },
                "safety": {
                    "enabled": True,
                    "max_daily_loss": 50000
                }
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            filename = f"{casino_name.lower().replace(' ', '_')}_config.json"
            self.save_config(config, filename)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
            test_choice = input(f"\n–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API —Å–µ–π—á–∞—Å? (y/n): ").lower()
            if test_choice == 'y':
                self.test_manual_config(config)
            
            print(f"\nüéâ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–û–ó–î–ê–ù–ê!")
            print(f"üìÅ –§–∞–π–ª: {filename}")
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
            activate = input("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é? (y/n): ").lower()
            if activate == 'y':
                import shutil
                shutil.copy(filename, "casino_setup.json")
                print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
        else:
            print("‚ùå –ù–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ API")
    
    def test_manual_config(self, config):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—á–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API")
        print("-" * 16)
        
        for name, endpoint in config['api']['endpoints'].items():
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É—é {name}...")
            
            try:
                req = urllib.request.Request(endpoint['url'])
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
                for header, value in config['api']['headers'].items():
                    req.add_header(header, value)
                
                with urllib.request.urlopen(req, timeout=10) as response:
                    status_code = response.getcode()
                    content_type = response.headers.get('Content-Type', '')
                    data = response.read(300).decode('utf-8', errors='ignore')
                    
                    if status_code == 200:
                        print(f"   ‚úÖ HTTP {status_code} - {content_type}")
                        print(f"   üìÑ –î–∞–Ω–Ω—ã–µ: {data[:100]}...")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä—É–ª–µ—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        if self.contains_roulette_data(data):
                            print(f"   üé∞ –°–û–î–ï–†–ñ–ò–¢ –î–ê–ù–ù–´–ï –†–£–õ–ï–¢–ö–ò!")
                    else:
                        print(f"   ‚ö†Ô∏è HTTP {status_code}")
                        
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def contains_roulette_data(self, data):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä—É–ª–µ—Ç–∫–∏"""
        indicators = ['roulette', 'wheel', 'spin', 'number', 'red', 'black', 'winning', 'result']
        data_lower = data.lower()
        return sum(1 for indicator in indicators if indicator in data_lower) >= 2
    
    def extract_base_url(self, url):
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –±–∞–∑–æ–≤—ã–π URL"""
        if '://' in url:
            parts = url.split('/')
            return '/'.join(parts[:3])
        return url
    
    def save_config(self, config, filename):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        try:
            config_path = Path(__file__).parent / filename
            with open(config_path, 'w', encoding='utf-8') as f:
                json.dump(config, f, indent=2, ensure_ascii=False)
            print(f"üíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {filename}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
    
    def show_current_status(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å"""
        print("üìä –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´")
        print("=" * 25)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_files = [
            ("casino_setup.json", "–ê–∫—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"),
            ("paddypower_config.json", "Paddy Power + Pragmatic Play"),
            ("spinandgo_config.json", "Spin and Go Roulette")
        ]
        
        for file, description in config_files:
            if Path(file).exists():
                print(f"‚úÖ {file} - {description}")
            else:
                print(f"‚ùå {file} - {description} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
        
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        if Path("paddypower_config.json").exists():
            print(f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Paddy Power API - –æ–Ω —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: python test_connection.py")
        else:
            print(f"‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä (F12 ‚Üí Network)")
            print(f"‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ —ç—Ç—É —Å–∏—Å—Ç–µ–º—É")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã"""
        print("üé∞ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –°–ë–û–†–©–ò–ö API")
        print("=" * 28)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        self.show_current_status()
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
        self.setup_multiple_casinos()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        setup = UniversalAPISetup()
        setup.run()
        
    except KeyboardInterrupt:
        print("\n\nüëã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()