"""
–ë–´–°–¢–†–´–ô –¢–ï–°–¢ –í–ï–ë-–°–ö–†–ê–ü–ï–†–ê
=========================

–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ —Å–∫—Ä–∞–ø–µ—Ä –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –≤–∞—à–µ–π —Ä—É–ª–µ—Ç–∫–∏
"""

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∫—Ä–∞–ø–µ—Ä–∞"""
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –í–ï–ë-–°–ö–†–ê–ü–ï–†–ê")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Selenium
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Selenium...")
    try:
        from selenium import webdriver
        print("   ‚úÖ Selenium —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("   ‚ùå Selenium –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: py -m pip install selenium webdriver-manager")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ChromeDriver
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ ChromeDriver...")
    try:
        from selenium.webdriver.chrome.service import Service
        from webdriver_manager.chrome import ChromeDriverManager
        
        service = Service(ChromeDriverManager().install())
        print("   ‚úÖ ChromeDriver –¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"   ‚ö†Ô∏è ChromeDriver: {e}")
        print("   –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π ChromeDriver...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n" + "="*60)
    print("üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("="*60)
    
    url = input("\nüåê –í–≤–µ–¥–∏—Ç–µ URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä—É–ª–µ—Ç–∫–æ–π: ").strip()
    if not url:
        print("‚ùå URL –Ω–µ –≤–≤–µ–¥–µ–Ω")
        return
    
    xpath = input("\nüìç –í–≤–µ–¥–∏—Ç–µ XPath —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏\n   (–∏–ª–∏ Enter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): ").strip()
    if not xpath:
        xpath = "/html/body/div[2]/div/div[3]/div[1]/div/div[1]/div/div/div[2]/div[4]"
    
    print(f"\nüéØ URL: {url}")
    print(f"üéØ XPath: {xpath}")
    
    confirm = input("\n‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç? (y/n): ").strip().lower()
    if confirm != 'y':
        print("‚ùå –¢–µ—Å—Ç –æ—Ç–º–µ–Ω–µ–Ω")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    print("\n" + "="*60)
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê...")
    print("="*60)
    
    try:
        from selenium import webdriver
        from selenium.webdriver.chrome.options import Options
        from selenium.webdriver.common.by import By
        from selenium.webdriver.support.ui import WebDriverWait
        from selenium.webdriver.support import expected_conditions as EC
        from webdriver_manager.chrome import ChromeDriverManager
        from selenium.webdriver.chrome.service import Service
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
        print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞...")
        chrome_options = Options()
        chrome_options.add_argument('--no-sandbox')
        chrome_options.add_argument('--disable-dev-shm-usage')
        chrome_options.add_argument('--disable-blink-features=AutomationControlled')
        
        # –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä
        print("üåê –ó–∞–ø—É—Å–∫ Chrome...")
        try:
            service = Service(ChromeDriverManager().install())
            driver = webdriver.Chrome(service=service, options=chrome_options)
        except:
            driver = webdriver.Chrome(options=chrome_options)
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print(f"üåê –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {url}")
        driver.get(url)
        
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (10 —Å–µ–∫—É–Ω–¥)...")
        time.sleep(10)
        
        # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç
        print(f"\nüîç –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ XPath...")
        print(f"   XPath: {xpath}")
        
        try:
            wait = WebDriverWait(driver, 10)
            element = wait.until(
                EC.presence_of_element_located((By.XPATH, xpath))
            )
            
            print("‚úÖ –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω!")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            element_text = element.text
            element_html = element.get_attribute('innerHTML')
            
            print(f"\nüìä –°–û–î–ï–†–ñ–ò–ú–û–ï –≠–õ–ï–ú–ï–ù–¢–ê:")
            print("-"*60)
            if element_text:
                print(f"–¢–µ–∫—Å—Ç ({len(element_text)} —Å–∏–º–≤–æ–ª–æ–≤):")
                print(element_text[:500])
            else:
                print("‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞")
            
            print(f"\nHTML ({len(element_html)} —Å–∏–º–≤–æ–ª–æ–≤):")
            print(element_html[:500])
            
            # –ò—â–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            children = element.find_elements(By.XPATH, ".//*")
            print(f"\nüìä –î–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(children)}")
            
            if children:
                print("\n–ü–µ—Ä–≤—ã–µ 5 –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
                for i, child in enumerate(children[:5], 1):
                    child_text = child.text
                    child_tag = child.tag_name
                    child_class = child.get_attribute('class')
                    print(f"  {i}. <{child_tag}> class='{child_class}': {child_text[:50]}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —á–∏—Å–ª–∞
            print(f"\nüî¢ –ü–û–ò–°–ö –ß–ò–°–ï–õ –†–£–õ–ï–¢–ö–ò (0-36)...")
            import re
            
            all_text = element_text + " " + element_html
            numbers_found = re.findall(r'\b([0-9]|[1-2][0-9]|3[0-6])\b', all_text)
            
            if numbers_found:
                unique_numbers = list(set([int(n) for n in numbers_found if 0 <= int(n) <= 36]))
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–∏—Å–µ–ª: {len(unique_numbers)}")
                print(f"–ß–∏—Å–ª–∞: {sorted(unique_numbers)[:20]}")
            else:
                print("‚ùå –ß–∏—Å–ª–∞ —Ä—É–ª–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–µ–Ω –¥—Ä—É–≥–æ–π XPath")
            
            print("\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
            print("\nüí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
            print("1. –ï—Å–ª–∏ —á–∏—Å–ª–∞ –Ω–∞–π–¥–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç XPath")
            print("2. –ï—Å–ª–∏ —á–∏—Å–µ–ª –Ω–µ—Ç - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∞–ø–µ—Ä: python web_scraper_single_roulette.py")
            
        except Exception as e:
            print(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
            print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
            print("1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π XPath")
            print("2. –≠–ª–µ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ (–Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∂–¥–∞—Ç—å)")
            print("3. –≠–ª–µ–º–µ–Ω—Ç —Å–∫—Ä—ã—Ç –∏–ª–∏ –Ω–µ –≤–∏–¥–µ–Ω")
            print("\nüí° –ü–û–ü–†–û–ë–£–ô–¢–ï:")
            print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ XPath –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:")
            print(f"   $x('{xpath}')")
            print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π XPath:")
            print("   //div[contains(@class, 'history')]")
            print("   //div[contains(@class, 'result')]")
        
        input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
        driver.quit()
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Selenium: py -m pip install selenium webdriver-manager")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ Chrome –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")


if __name__ == "__main__":
    import time
    quick_test()