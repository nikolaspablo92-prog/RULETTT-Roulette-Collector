"""
✅ ВЕБ-СКРАПЕР СОЗДАН - ТОЧНЫЕ РЕЗУЛЬТАТЫ ОДНОЙ РУЛЕТКИ!
========================================================

ПРОБЛЕМА: "снова кучу разных результатов"
РЕШЕНИЕ: Веб-скрапер с точным XPath для ОДНОЙ конкретной рулетки

🎯 ЧТО СОЗДАНО:
===============

1. 📄 web_scraper_single_roulette.py
   ✅ Полный веб-скрапер с Selenium
   ✅ Использует ваш XPath для точного извлечения
   ✅ Мониторинг в реальном времени
   ✅ Сохранение в базу данных
   ✅ Гарантия данных ТОЛЬКО с одной рулетки

2. 📄 quick_scraper_test.py
   ✅ Быстрый тест для проверки
   ✅ Показывает что находится в элементе
   ✅ Помогает найти правильный XPath
   ✅ Отладка проблем

3. 📄 SCRAPER_INSTRUCTIONS.py
   ✅ Подробная инструкция
   ✅ Примеры использования
   ✅ Решение проблем

🚀 БЫСТРЫЙ СТАРТ:
=================

ШАГ 1: Установка (УЖЕ ВЫПОЛНЕНО ✅)
------------------------------------
py -m pip install selenium webdriver-manager

ШАГ 2: Быстрый тест
--------------------
python quick_scraper_test.py

Введите:
- URL страницы с рулеткой
- XPath элемента (или оставьте по умолчанию)

Скрапер покажет:
- Что находится в элементе
- Какие числа найдены
- Работает ли XPath

ШАГ 3: Полный скрапер
----------------------
python web_scraper_single_roulette.py

Меню:
1. Тест извлечения данных
2. Запустить мониторинг
3. Показать статистику

🎯 КАК ПОЛУЧИТЬ ПРАВИЛЬНЫЙ XPATH:
==================================

Важно! От правильности XPath зависит точность данных!

1. 🌐 Откройте страницу с рулеткой в Chrome
2. 🎯 Найдите КОНКРЕТНЫЙ элемент с результатами ВАШЕЙ рулетки
   - Табло с числами
   - История результатов
   - Статистика стола
3. 🖱️ Правый клик на элементе → "Проверить" (Inspect)
4. 📝 В DevTools правый клик на выделенном HTML
5. 📋 Copy → Copy XPath
6. ✏️ Вставьте XPath в скрапер

💡 ПРИМЕРЫ XPATH ДЛЯ РАЗНЫХ ЭЛЕМЕНТОВ:
======================================

Для конкретного стола по ID:
//*[@id="roulette-table-541"]//div[@class="history"]

Для истории результатов:
//div[contains(@class, "history")]//span[@class="number"]

Для статистики конкретного стола:
//div[@data-table="roulettestura541"]//div[@class="results"]

Для последних результатов:
//div[contains(@class, "recent-results")]//div[@class="ball"]

✅ ПРЕИМУЩЕСТВА ВЕБ-СКРАПЕРА:
=============================

🎯 ТОЧНОСТЬ:
- Извлекает данные ТОЛЬКО с указанного элемента
- Вы видите откуда берутся данные
- Никаких смешанных результатов

🔒 НАДЕЖНОСТЬ:
- Работает с любым сайтом
- Обходит ограничения API
- Не зависит от токенов авторизации

👁️ КОНТРОЛЬ:
- Видимый режим - наблюдаете процесс
- Фоновый режим - работает незаметно
- Полный контроль над данными

🎰 ОДИН СТОЛ:
- XPath указывает на КОНКРЕТНУЮ рулетку
- Невозможно получить данные с других столов
- Гарантированная чистота данных

📊 ИСПОЛЬЗОВАНИЕ ДАННЫХ:
========================

Скрапер сохраняет данные в:
- data/scraped_single_roulette.db (SQLite база данных)

Данные включают:
- Номер (0-36)
- Цвет (red/black/green)
- Время
- Источник (web_scraper)
- XPath (для проверки)

Используйте эти данные в основной системе для:
- Анализа паттернов
- Тестирования стратегий
- Получения статистики

⚠️ ВАЖНЫЕ ЗАМЕЧАНИЯ:
====================

🔑 XPATH МОЖЕТ МЕНЯТЬСЯ:
- При обновлении сайта
- При изменении дизайна
- Проверяйте периодически

🌐 САЙТ МОЖЕТ БЛОКИРОВАТЬ:
- Используйте задержки между запросами
- Не делайте слишком частые проверки
- Рекомендуемый интервал: 30-60 секунд

👤 АВТОРИЗАЦИЯ:
- Некоторые сайты требуют входа
- Войдите в аккаунт в открытом браузере
- Скрапер использует ту же сессию

🧪 ТЕСТИРОВАНИЕ:
===============

КОМАНДА 1: Быстрый тест (рекомендуется сначала)
python quick_scraper_test.py

Что проверяет:
✅ Selenium установлен
✅ ChromeDriver работает
✅ Элемент найден
✅ Числа извлекаются

КОМАНДА 2: Полный скрапер
python web_scraper_single_roulette.py

Что делает:
✅ Мониторинг в реальном времени
✅ Сохранение в базу данных
✅ Статистика результатов

📋 СРАВНЕНИЕ МЕТОДОВ:
=====================

API МЕТОД (strict_single_table.py):
✅ Быстрый
✅ Надежный
❌ Требует токены
❌ Может устаревать (401 ошибка)
❌ Смешивает столы

ВЕБ-СКРАПЕР (web_scraper_single_roulette.py):
✅ Точный (конкретный XPath)
✅ Один стол (гарантированно)
✅ Не нужны токены
✅ Работает всегда
❌ Медленнее API
❌ Требует Chrome

🎉 РЕКОМЕНДАЦИЯ:
================

Используйте ВЕБ-СКРАПЕР если:
- API дает смешанные результаты
- Токены устаревают
- Нужна 100% точность
- Важно получать данные только с одного стола

Используйте API если:
- Токены свежие
- API работает стабильно
- Нужна скорость

═══════════════════════════════════════════════════════════
🎯 ВЕБ-СКРАПЕР ГОТОВ К ИСПОЛЬЗОВАНИЮ!
═══════════════════════════════════════════════════════════

СЛЕДУЮЩИЙ ШАГ:
python quick_scraper_test.py

Введите URL вашей рулетки и проверьте работу скрапера!

После успешного теста используйте:
python web_scraper_single_roulette.py

Это даст вам ТОЧНЫЕ результаты ТОЛЬКО вашей рулетки! 🎰✨
"""

if __name__ == "__main__":
    print(__doc__)