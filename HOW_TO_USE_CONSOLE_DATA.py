"""
🎯 ПОЛНАЯ СИСТЕМА АНАЛИЗА РУЛЕТКИ - БЫСТРЫЙ СТАРТ
=================================================

Эта система позволяет собирать данные с рулетки через консоль браузера
и анализировать их с помощью Python для поиска выигрышных стратегий.

═══════════════════════════════════════════════════════════════════════
📋 ШАГ 1: ПОЛУЧИТЬ ДАННЫЕ ИЗ КОНСОЛИ (РУЧНОЙ МЕТОД - БЫСТРО)
═══════════════════════════════════════════════════════════════════════

1. Откройте страницу рулетки в Opera
2. Нажмите Ctrl+Shift+I (откроется консоль)
3. Вставьте этот код:

(function() {
    const selector = "#root > div > div.app-container > div.games-slots--kYClr > div > div.game-node--pwxxn > div > div > div.game-table > div.game-table__game-specific > div > div.game-area__history-line--Lkj9A";
    
    const element = document.querySelector(selector);
    
    if (element) {
        const allText = element.innerText + ' ' + element.innerHTML;
        const numbers = allText.match(/\\b([0-9]|[1-2][0-9]|3[0-6])\\b/g);
        
        if (numbers) {
            const unique = [...new Set(numbers.filter(n => n >= 0 && n <= 36))];
            
            const results = unique.map(num => {
                const n = parseInt(num);
                const reds = [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36];
                return {number: n, color: n === 0 ? 'green' : (reds.includes(n) ? 'red' : 'black')};
            });
            
            console.log('✅ Найдено:', results.length, 'чисел');
            console.table(results);
            
            const jsonData = JSON.stringify(results, null, 2);
            console.log('📋 JSON для копирования:');
            console.log(jsonData);
            
            window.rouletteResults = results;
            console.log('💡 Команда для копирования: copy(JSON.stringify(window.rouletteResults, null, 2))');
        }
    }
})();

4. После выполнения кода введите:

copy(JSON.stringify(window.rouletteResults, null, 2))

5. Данные скопированы в буфер обмена!

═══════════════════════════════════════════════════════════════════════
📊 ШАГ 2: СОХРАНИТЬ ДАННЫЕ В ФАЙЛ
═══════════════════════════════════════════════════════════════════════

1. Создайте файл: roulette_console_data.json
2. Откройте его в блокноте
3. Вставьте скопированные данные (Ctrl+V)
4. Сохраните файл

Формат данных должен быть:
[
  {"number": 6, "color": "black"},
  {"number": 24, "color": "black"},
  {"number": 4, "color": "black"},
  ...
]

═══════════════════════════════════════════════════════════════════════
🔬 ШАГ 3: АНАЛИЗИРОВАТЬ ДАННЫЕ В PYTHON
═══════════════════════════════════════════════════════════════════════

Запустите анализ:

py console_to_analysis.py

Что вы получите:
✅ Статистику по цветам (красные, черные, зеленые)
✅ Топ-5 самых частых чисел
✅ Максимальные серии одного цвета
✅ Тестирование 4 разных стратегий игры
✅ Лучшую и худшую стратегию для этих данных
✅ Отчет в файле console_analysis_report.txt

═══════════════════════════════════════════════════════════════════════
🔄 БОНУС: АВТОМАТИЧЕСКИЙ СБОРЩИК (ДОЛГОСРОЧНАЯ РАБОТА)
═══════════════════════════════════════════════════════════════════════

Для автоматического сбора данных каждые 30 секунд:

1. Запустите:

py auto_console_collector.py

2. Скопируйте сгенерированный JavaScript код из файла:
   auto_collector_console_code.js

3. Вставьте в консоль браузера

4. Сборщик будет автоматически:
   ✅ Собирать новые результаты каждые 30 секунд
   ✅ Сохранять в localStorage браузера
   ✅ Показывать статистику в реальном времени

5. Команды в консоли браузера:

exportRouletteData()     - Экспорт для Python
showRouletteStats()      - Показать статистику
stopRouletteCollector()  - Остановить сборщик
clearRouletteData()      - Очистить данные

═══════════════════════════════════════════════════════════════════════
📈 ЧТО ПОКАЗЫВАЕТ АНАЛИЗ
═══════════════════════════════════════════════════════════════════════

1. 📊 СТАТИСТИКА:
   - Общее количество спинов
   - Распределение по цветам (%, количество)
   - Топ-5 самых частых чисел
   - Максимальные серии красных/черных

2. 🎲 ТЕСТИРОВАНИЕ СТРАТЕГИЙ:
   
   ✅ Мартингейл на красное
      Удваивает ставку после проигрыша
   
   ✅ Мартингейл на черное
      То же самое, но на черное
   
   ✅ Фиксированная ставка на красное
      Всегда одинаковая ставка
   
   ✅ Фиксированная ставка на черное
      Всегда одинаковая ставка

3. 💰 РЕЗУЛЬТАТЫ:
   - Конечный баланс
   - Прибыль/убыток в $ и %
   - Количество ставок
   - Процент выигрыша
   - Лучшая и худшая стратегия

═══════════════════════════════════════════════════════════════════════
🎯 ПРИМЕР ВЫВОДА АНАЛИЗА
═══════════════════════════════════════════════════════════════════════

============================================================
📊 СТАТИСТИКА ПО ДАННЫМ ИЗ КОНСОЛИ
============================================================

🎰 Всего спинов: 11
🔢 Уникальных чисел: 11

🎨 Распределение по цветам:
   ⚫ BLACK: 6 (54.5%)
   🔴 RED: 5 (45.5%)
   🟢 GREEN: 0 (0.0%)

🔥 Топ-5 самых частых чисел:
   1. ⚫ 6: 1 раз
   2. ⚫ 24: 1 раз
   3. ⚫ 4: 1 раз
   4. ⚫ 10: 1 раз
   5. 🔴 12: 1 раз

📈 Максимальные серии:
   🔴 Красных подряд: 3
   ⚫ Черных подряд: 2

============================================================
🎲 ТЕСТИРОВАНИЕ СТРАТЕГИЙ
============================================================

🎯 Тестирование: Мартингейл на красное
   Начальный баланс: $1000
   ✅ Конечный баланс: $1080.00
   ✅ Прибыль/Убыток: $80.00 (+8.0%)
   📊 Всего ставок: 11
   🎯 Выигрышных: 5 (45.5%)

...

============================================================
🏆 РЕЗУЛЬТАТЫ ТЕСТИРОВАНИЯ
============================================================

✅ Лучшая стратегия: Мартингейл на красное
   Прибыль: $80.00 (+8.0%)

❌ Худшая стратегия: Фиксированная ставка на черное
   Убыток: $-20.00 (-2.0%)

============================================================

💾 Отчет сохранен: console_analysis_report.txt

═══════════════════════════════════════════════════════════════════════
🚀 БЫСТРЫЙ РЕЦЕПТ (3 КОМАНДЫ)
═══════════════════════════════════════════════════════════════════════

1. В консоли браузера:
   (вставить код из ШАГ 1)
   copy(JSON.stringify(window.rouletteResults, null, 2))

2. Создать файл roulette_console_data.json и вставить данные (Ctrl+V)

3. В PowerShell:
   py console_to_analysis.py

✅ ГОТОВО! Вы увидите полную статистику и лучшие стратегии!

═══════════════════════════════════════════════════════════════════════
💡 СОВЕТЫ
═══════════════════════════════════════════════════════════════════════

✅ Собирайте больше данных для точных результатов (минимум 50 спинов)
✅ Обновляйте данные регулярно для актуальной статистики
✅ Сравнивайте стратегии на разных наборах данных
✅ Используйте автосборщик для долгосрочного мониторинга
✅ Анализируйте данные ТОЛЬКО с одной рулетки (у вас это работает!)

═══════════════════════════════════════════════════════════════════════
📁 ФАЙЛЫ СИСТЕМЫ
═══════════════════════════════════════════════════════════════════════

console_to_analysis.py              - Основной анализатор
auto_console_collector.py           - Генератор автосборщика
auto_collector_console_code.js      - JavaScript код для браузера
roulette_console_data.json          - Ваши данные (создаете вы)
console_analysis_report.txt         - Отчет анализа
OPERA_FIXED_CODE.py                 - Код для консоли Opera
SUCCESS_RESULTS.py                  - Инструкции для успеха

═══════════════════════════════════════════════════════════════════════
✅ ВСЁ ГОТОВО! НАЧИНАЙТЕ АНАЛИЗ!
═══════════════════════════════════════════════════════════════════════

1. Соберите данные из консоли браузера (ШАГ 1)
2. Сохраните в roulette_console_data.json (ШАГ 2)
3. Запустите: py console_to_analysis.py (ШАГ 3)

🎉 Наслаждайтесь полным анализом и выигрышными стратегиями! 🎉
"""

if __name__ == "__main__":
    print(__doc__)
