🎲 РУКОВОДСТВО ПО НАСТРОЙКЕ ОНЛАЙН РАБОЧЕЙ ОБЛАСТИ - RULETTT PROJECT
═══════════════════════════════════════════════════════════════════════

📋 СОДЕРЖАНИЕ:
1. GitHub Codespaces (РЕКОМЕНДУЕТСЯ) 
2. GitPod
3. Replit
4. VS Code Live Share
5. CodeSandbox

═══════════════════════════════════════════════════════════════════════
🏆 ВАРИАНТ 1: GITHUB CODESPACES (РЕКОМЕНДУЕТСЯ)
═══════════════════════════════════════════════════════════════════════

✅ ПРЕИМУЩЕСТВА:
• Полная интеграция с VS Code
• Бесплатно до 60 часов в месяц
• Автоматическая настройка окружения
• Реальное время сотрудничества

📝 ПОШАГОВАЯ НАСТРОЙКА:

ШАГ 1: Подготовка проекта
1. Откройте терминал в папке проекта
2. Выполните команды:
   git init
   git add .
   git commit -m "Initial commit - Roulette Data Collector"

ШАГ 2: Создание GitHub репозитория
1. Идите на github.com
2. Нажмите "New repository"
3. Имя: "RULETTT-Roulette-Collector"
4. Описание: "Automated Roulette Data Collection & Analysis System"
5. Публичный репозиторий (для бесплатных Codespaces)
6. Создайте репозиторий

ШАГ 3: Загрузка кода
В терминале выполните:
git remote add origin https://github.com/ВАШ_GITHUB/RULETTT-Roulette-Collector.git
git branch -M main
git push -u origin main

ШАГ 4: Создание Codespace
1. В GitHub репозитории нажмите зеленую кнопку "Code"
2. Вкладка "Codespaces"
3. "Create codespace on main"
4. Ждите автоматической настройки (2-3 минуты)

ШАГ 5: Приглашение друга
1. В Codespace нажмите "Share" в правом верхнем углу
2. Отправьте ссылку другу
3. Или добавьте друга как collaborator в GitHub репозиторий

═══════════════════════════════════════════════════════════════════════
🌐 ВАРИАНТ 2: GITPOD
═══════════════════════════════════════════════════════════════════════

✅ ПРЕИМУЩЕСТВА:
• 50 часов бесплатно в месяц
• Быстрый запуск
• Интеграция с GitHub

📝 НАСТРОЙКА:
1. Создайте GitHub репозиторий (как в варианте 1)
2. Идите на gitpod.io
3. Войдите через GitHub
4. Введите URL: gitpod.io/#https://github.com/ВАШ_GITHUB/RULETTT-Roulette-Collector
5. Рабочая область запустится автоматически

═══════════════════════════════════════════════════════════════════════
⚡ ВАРИАНТ 3: REPLIT
═══════════════════════════════════════════════════════════════════════

✅ ПРЕИМУЩЕСТВА:
• Простая настройка
• Бесплатный публичный проект  
• Встроенный веб-сервер

📝 НАСТРОЙКА:
1. Идите на replit.com
2. "Create Repl" → "Import from GitHub"
3. Введите URL GitHub репозитория
4. Выберите "Python" как основной язык
5. Запустите проект

═══════════════════════════════════════════════════════════════════════
🤝 ВАРИАНТ 4: VS CODE LIVE SHARE (ЛОКАЛЬНО)
═══════════════════════════════════════════════════════════════════════

✅ ПОДХОДИТ ЕСЛИ:
• У вас мощный компьютер
• Стабильный интернет
• Хотите контролировать среду

📝 НАСТРОЙКА:
1. Установите VS Code Live Share Extension
2. Войдите через Microsoft/GitHub аккаунт
3. Откройте проект в VS Code
4. Нажмите "Live Share" в статус баре
5. Отправьте ссылку другу

═══════════════════════════════════════════════════════════════════════
🚀 БЫСТРЫЙ СТАРТ - ВЫБЕРИТЕ ПЛАТФОРМУ
═══════════════════════════════════════════════════════════════════════

ДЛЯ НОВИЧКОВ:
→ GitHub Codespaces (проще всего)

ДЛЯ ОПЫТНЫХ:
→ GitPod (быстрее запуск)

ДЛЯ ПРОСТЫХ ПРОЕКТОВ:
→ Replit (веб-интерфейс)

ДЛЯ ЛОКАЛЬНОЙ РАБОТЫ:
→ VS Code Live Share

═══════════════════════════════════════════════════════════════════════
📞 ПОДДЕРЖКА И ПОМОЩЬ
═══════════════════════════════════════════════════════════════════════

ПРОБЛЕМЫ С НАСТРОЙКОЙ?
1. Проверьте подключение к интернету
2. Убедитесь, что репозиторий публичный
3. Проверьте, что .devcontainer.json создан правильно

МЕДЛЕННАЯ РАБОТА?
1. Закройте неиспользуемые вкладки
2. Перезапустите workspace
3. Попробуйте другую платформу

ОШИБКИ В КОДЕ?
1. Проверьте файл requirements.txt
2. Убедитесь, что Python 3.11 установлен
3. Перезапустите контейнер

═══════════════════════════════════════════════════════════════════════
✅ CHECKLIST - ГОТОВНОСТЬ К РАБОТЕ
═══════════════════════════════════════════════════════════════════════

□ GitHub аккаунт создан
□ Репозиторий создан и код загружен  
□ .devcontainer.json файл на месте
□ Выбрана онлайн платформа
□ Workspace запущен
□ Друг приглашен и имеет доступ
□ Тестовый файл создан и изменения видны обеим сторонам

═══════════════════════════════════════════════════════════════════════

🎯 СЛЕДУЮЩИЕ ШАГИ:
1. Выберите платформу из этого списка
2. Создайте GitHub репозиторий  
3. Запустите онлайн workspace
4. Пригласите друга
5. Начните совместную разработку!

🎲 Удачи в создании онлайн рабочей области для Roulette Collector! 🎲
