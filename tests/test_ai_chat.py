#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —á–∞—Ç–µ RULETTT
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–≥–æ AI endpoint
"""

import requests
import json
import sys
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE = 'http://localhost:5000'

def test_ai_responses():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ AI-–æ—Ç–≤–µ—Ç—ã"""
    
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ RULETTT")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_cases = [
        '–ø—Ä–∏–≤–µ—Ç',
        '–ø–æ–º–æ—â—å', 
        '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        '—Å—Ç—Ä–∞—Ç–µ–≥–∏—è',
        '–∫–æ–º–∞–Ω–¥–∞',
        'api',
        '–∫–æ–¥',
        '–æ—à–∏–±–∫–∞',
        '–∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º–∞–Ω–¥—É',
        '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –º–∞—Ä—Ç–∏–Ω–≥–µ–π–ª',
        '—á—Ç–æ —Ç–∞–∫–æ–µ RULETTT'
    ]
    
    for i, message in enumerate(test_cases, 1):
        print(f"\n{i}. –¢–µ—Å—Ç: '{message}'")
        
        try:
            response = requests.post(f'{API_BASE}/api/chat/ai', json={
                'message': message,
                'session_id': 'ai_test_session'
            })
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω (ID: {data['message_id']})")
                print(f"ü§ñ AI: {data['ai_response'][:100]}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                print(f"   {response.text}")
                
        except requests.exceptions.ConnectionError:
            print("‚ùå –û—à–∏–±–∫–∞: API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python api_server.py")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
    return True

def test_chat_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é AI –≤ –æ–±—ã—á–Ω—ã–π —á–∞—Ç"""
    
    print("\n" + "=" * 50)
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —á–∞—Ç–æ–º")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º AI –∑–∞–ø—Ä–æ—Å
        ai_response = requests.post(f'{API_BASE}/api/chat/ai', json={
            'message': '–ø–æ–º–æ—â—å',
            'session_id': 'integration_test'
        })
        
        if ai_response.status_code != 200:
            print("‚ùå –û—à–∏–±–∫–∞ AI –∑–∞–ø—Ä–æ—Å–∞")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ —á–∞—Ç–µ
        chat_response = requests.get(f'{API_BASE}/api/chat', params={
            'session_id': 'integration_test',
            'limit': 5
        })
        
        if chat_response.status_code == 200:
            messages = chat_response.json()['messages']
            ai_messages = [msg for msg in messages if 'ü§ñ' in msg['username']]
            
            if ai_messages:
                print(f"‚úÖ AI —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ: {len(ai_messages)}")
                print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ: {ai_messages[-1]['message'][:50]}...")
                return True
            else:
                print("‚ö†Ô∏è AI —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —á–∞—Ç–µ")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_api_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API"""
    
    try:
        response = requests.get(f'{API_BASE}/api/health')
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ö†Ô∏è API –æ—Ç–≤–µ—Ç–∏–ª —Å –∫–æ–¥–æ–º: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python api_server.py")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üéØ RULETTT AI Chat Tester")
    print(f"üìÖ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if not test_api_health():
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º AI –æ—Ç–≤–µ—Ç—ã
    if test_ai_responses():
        print("\n‚úÖ –¢–µ—Å—Ç—ã AI-–æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω—ã")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∏ –≤ AI-–æ—Ç–≤–µ—Ç–∞—Ö")
        
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    if test_chat_integration():
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —á–∞—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("\nüí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ webapp/global_chat.html")
    print("   2. –í–≤–µ–¥–∏—Ç–µ @ai –ø–æ–º–æ—â—å")
    print("   3. –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ü§ñ AI")

if __name__ == '__main__':
    main()