#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üöÄ RULETTT - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
======================================================

–ü–æ—à–∞–≥–æ–≤—ã–π –≥–∞–π–¥ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π
"""

import os
import sys
from pathlib import Path
import time

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows PowerShell
if sys.platform == 'win32':
    import io
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
    sys.stdin = io.TextIOWrapper(sys.stdin.buffer, encoding='utf-8')

def clear_screen():
    """–û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞"""
    os.system('cls' if os.name == 'nt' else 'clear')

def print_header(text):
    """–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("\n" + "=" * 80)
    print(f"  {text}")
    print("=" * 80 + "\n")

def print_step(number, text):
    """–®–∞–≥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    print(f"\n{'='*80}")
    print(f"üìç –®–ê–ì {number}: {text}")
    print(f"{'='*80}\n")

def wait_for_user():
    """–û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è Enter"""
    input("\n‚èé –ù–∞–∂–º–∏—Ç–µ ENTER –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

# –ù–∞—á–∞–ª–æ
clear_screen()
print_header("üé≤ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –°–ò–°–¢–ï–ú–£ RULETTT!")

print("""
–≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:

‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
‚úÖ –û—Ç–∫—Ä—ã—Ç—å Dashboard –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
‚úÖ –ù–∞—á–∞—Ç—å —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ä—É–ª–µ—Ç–∫–∏
‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏

–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–º—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é! üöÄ
""")

wait_for_user()

# –®–ê–ì 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
print_step(1, "–ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´")

print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã...\n")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
files_to_check = [
    ('api_server.py', 'API —Å–µ—Ä–≤–µ—Ä'),
    ('webapp/dashboard.html', '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'),
    ('webapp/logs_dashboard.html', 'Dashboard –ª–æ–≥–æ–≤'),
    ('src/logger.py', '–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è'),
    ('src/error_tracker.py', '–¢—Ä–µ–∫–µ—Ä –æ—à–∏–±–æ–∫')
]

all_ok = True
for file, name in files_to_check:
    if Path(file).exists():
        print(f"   ‚úÖ {name}")
    else:
        print(f"   ‚ùå {name} - –ù–ï –ù–ê–ô–î–ï–ù")
        all_ok = False

if all_ok:
    print("\nüéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ! –ú–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.")
else:
    print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É.")
    sys.exit(1)

wait_for_user()

# –®–ê–ì 2: –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
print_step(2, "–ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í")

print("""
–ù–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å 2 —Å–µ—Ä–≤–∏—Å–∞:

1Ô∏è‚É£  API —Å–µ—Ä–≤–µ—Ä (–ø–æ—Ä—Ç 5000) - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ
2Ô∏è‚É£  –í–µ–±-—Å–µ—Ä–≤–µ—Ä (–ø–æ—Ä—Ç 8080) - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

üéØ –í–ê–†–ò–ê–ù–¢–´ –ó–ê–ü–£–°–ö–ê:
""")

print("""
–í–∞—Ä–∏–∞–Ω—Ç A: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
   –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª: START_RULETTT.bat
   –û–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç –æ–±–∞ —Å–µ—Ä–≤–∏—Å–∞

–í–∞—Ä–∏–∞–Ω—Ç B: –†—É—á–Ω–æ–π (–¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö)
   –¢–µ—Ä–º–∏–Ω–∞–ª 1: py api_server.py
   –¢–µ—Ä–º–∏–Ω–∞–ª 2: cd webapp && py -m http.server 8080

–í–∞—Ä–∏–∞–Ω—Ç C: VS Code –∑–∞–¥–∞—á–∏
   Ctrl+Shift+P ‚Üí "Tasks: Run Task"
   ‚Üí "üé≤ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã RULETTT"
""")

choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (A/B/C) –∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è: ").upper()

if choice == 'A':
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é START_RULETTT.bat...")
    os.system('START_RULETTT.bat')
    time.sleep(5)
elif choice == 'B':
    print("""
    \nüìù –û—Ç–∫—Ä–æ–π—Ç–µ 2 —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ PowerShell:
    
    –¢–µ—Ä–º–∏–Ω–∞–ª 1:
    py api_server.py
    
    –¢–µ—Ä–º–∏–Ω–∞–ª 2:
    cd webapp
    py -m http.server 8080
    """)
    wait_for_user()

print("\n‚úÖ –°–µ—Ä–≤–∏—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω—ã!")

wait_for_user()

# –®–ê–ì 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã
print_step(3, "–ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–´ –°–ï–†–í–ò–°–û–í")

print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤...\n")

import urllib.request
import json

services = [
    ('http://localhost:5000/api/health', 'API —Å–µ—Ä–≤–µ—Ä'),
    ('http://localhost:8080/dashboard.html', '–í–µ–±-—Å–µ—Ä–≤–µ—Ä'),
]

for url, name in services:
    try:
        response = urllib.request.urlopen(url, timeout=3)
        print(f"   ‚úÖ {name} - –†–ê–ë–û–¢–ê–ï–¢")
    except Exception as e:
        print(f"   ‚ùå {name} - –ù–ï –î–û–°–¢–£–ü–ï–ù")
        print(f"      –û—à–∏–±–∫–∞: {e}")

wait_for_user()

# –®–ê–ì 4: –û—Ç–∫—Ä—ã—Ç–∏–µ Dashboard
print_step(4, "–û–¢–ö–†–´–í–ê–ï–ú DASHBOARD")

print("""
üéØ –°–µ–π—á–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è Dashboard –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã.

–ù–∞ Dashboard –≤—ã —É–≤–∏–¥–∏—Ç–µ:
   üìä –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
   üö® –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
   üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   üîç –°–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–ì–æ—Ç–æ–≤—ã? üöÄ
""")

wait_for_user()

print("\nüåê –û—Ç–∫—Ä—ã–≤–∞—é Dashboard...")
os.system('start http://localhost:8080/logs_dashboard.html')
time.sleep(2)

print("""
‚úÖ Dashboard –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ!

–ß—Ç–æ –≤—ã –≤–∏–¥–∏—Ç–µ:
   üîµ –í–∫–ª–∞–¥–∫–∞ "–õ–æ–≥–∏" - –≤—Å–µ –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã
   üî¥ –í–∫–ª–∞–¥–∫–∞ "–û—à–∏–±–∫–∏" - –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫
   üü¢ –í–∫–ª–∞–¥–∫–∞ "–°–æ–±—ã—Ç–∏—è" - –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   üü° –í–∫–ª–∞–¥–∫–∞ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
""")

wait_for_user()

# –®–ê–ì 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
print_step(5, "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")

print("""
üß™ –°–µ–π—á–∞—Å –º—ã –∑–∞–ø—É—Å—Ç–∏–º —Ç–µ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π:
   ‚úÖ –°–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏
   ‚úÖ –ó–∞–ø–∏—à–µ—Ç –∏—Ö –≤ —Ñ–∞–π–ª—ã
   ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–±—ã—Ç–∏—è –Ω–∞ API
   ‚úÖ –ü–æ–∫–∞–∂–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

–õ–æ–≥–∏ –ø–æ—è–≤—è—Ç—Å—è –≤ Dashboard –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏!
""")

wait_for_user()

print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...\n")
os.system('py test_logging.py')

print("""
\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!

üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Dashboard:
   1. –û–±–Ω–æ–≤–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É "–õ–æ–≥–∏"
   2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã

""")

wait_for_user()

# –®–ê–ì 6: –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ä—É–ª–µ—Ç–∫–∏
print_step(6, "–ù–ê–ß–ê–õ–û –°–ë–û–†–ê –î–ê–ù–ù–´–• –†–£–õ–ï–¢–ö–ò")

print("""
üé∞ –°–ë–û–† –î–ê–ù–ù–´–• –° –†–ï–ê–õ–¨–ù–û–ô –†–£–õ–ï–¢–ö–ò

–ï—Å—Ç—å 2 —Å–ø–æ—Å–æ–±–∞:

–°–ø–æ—Å–æ–± 1: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä—â–∏–∫ (JavaScript –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
   1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç –∫–∞–∑–∏–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, PragmaticPlay)
   2. –ù–∞–∂–º–∏—Ç–µ F12 (–æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∫–æ–Ω—Å–æ–ª—å)
   3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ auto_collector_console_code.js
   4. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –Ω–∞–∂–º–∏—Ç–µ Enter
   5. –î–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥!

–°–ø–æ—Å–æ–± 2: –†—É—á–Ω–æ–π –≤–≤–æ–¥ —á–µ—Ä–µ–∑ API
   –û—Ç–ø—Ä–∞–≤—å—Ç–µ POST –∑–∞–ø—Ä–æ—Å:
   
   curl -X POST http://localhost:5000/api/spins \\
        -H "Content-Type: application/json" \\
        -d '{"number": 17, "color": "black", "casino_name": "test"}'

–°–ø–æ—Å–æ–± 3: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: py src/main.py
   –í—ã–±–µ—Ä–∏—Ç–µ: "1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏" ‚Üí "2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
""")

choice = input("\n–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? (1/2/3) –∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞: ")

if choice == '1':
    print("""
    \nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:
    
    1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
    2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç —Å —Ä—É–ª–µ—Ç–∫–æ–π
    3. –ù–∞–∂–º–∏—Ç–µ F12 (–∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞)
    4. –§–∞–π–ª auto_collector_console_code.js —É–∂–µ –≥–æ—Ç–æ–≤
    5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    6. –î–∞–Ω–Ω—ã–µ –Ω–∞—á–Ω—É—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
    
    üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Opera –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    """)
    
elif choice == '2':
    print("""
    \nüìù –ü—Ä–∏–º–µ—Ä API –∑–∞–ø—Ä–æ—Å–∞:
    
    PowerShell:
    curl -X POST http://localhost:5000/api/spins -H "Content-Type: application/json" -d '{"number": 23, "color": "red", "casino_name": "pragmatic"}'
    
    Python:
    import requests
    requests.post('http://localhost:5000/api/spins', 
        json={"number": 23, "color": "red", "casino_name": "pragmatic"})
    """)
    
elif choice == '3':
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    print("\n–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
    print("   py src/main.py")
    print("\n–ó–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ:")
    print("   1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏")
    print("   2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

wait_for_user()

# –®–ê–ì 7: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
print_step(7, "–ê–ù–ê–õ–ò–ó –°–û–ë–†–ê–ù–ù–´–• –î–ê–ù–ù–´–•")

print("""
üìä –ü–†–û–°–ú–û–¢–† –ò –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•

1Ô∏è‚É£  –ß–µ—Ä–µ–∑ Web Dashboard:
   http://localhost:8080/dashboard.html
   
   –ó–¥–µ—Å—å –≤—ã —É–≤–∏–¥–∏—Ç–µ:
   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ü–≤–µ—Ç–∞–º
   ‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–ø–∏–Ω–æ–≤
   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Å–µ—Ä–∏–π
   ‚Ä¢ –ì–æ—Ä—è—á–∏–µ –∏ —Ö–æ–ª–æ–¥–Ω—ã–µ —á–∏—Å–ª–∞

2Ô∏è‚É£  –ß–µ—Ä–µ–∑ API:
   GET http://localhost:5000/api/statistics
   GET http://localhost:5000/api/spins?limit=100

3Ô∏è‚É£  –ß–µ—Ä–µ–∑ Python CLI:
   py src/main.py
   
   –í—ã–±–µ—Ä–∏—Ç–µ:
   ‚Ä¢ "1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏" ‚Üí "3. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
   ‚Ä¢ "2. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π" ‚Üí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
   ‚Ä¢ "3. AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç" ‚Üí –£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
""")

choice = input("\n–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω—ã–π Dashboard? (Y/n): ").upper()

if choice != 'N':
    print("\nüåê –û—Ç–∫—Ä—ã–≤–∞—é Dashboard...")
    os.system('start http://localhost:8080/dashboard.html')
    time.sleep(2)

wait_for_user()

# –®–ê–ì 8: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
print_step(8, "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–†–ê–¢–ï–ì–ò–ô")

print("""
üéØ –ü–†–û–í–ï–†–ö–ê –ò–ì–†–û–í–´–• –°–¢–†–ê–¢–ï–ì–ò–ô

–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:
   ‚Ä¢ –ú–∞—Ä—Ç–∏–Ω–≥–µ–π–ª (—É–¥–≤–æ–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏)
   ‚Ä¢ –§–∏–±–æ–Ω–∞—á—á–∏ (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª)
   ‚Ä¢ –î'–ê–ª–∞–º–±–µ—Ä (–ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ)
   ‚Ä¢ Flat Bet (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞)
   ‚Ä¢ Pattern Following (—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏)

–ö–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:
   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: py src/main.py
   2. –í—ã–±–µ—Ä–∏—Ç–µ: "2. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"
   3. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   4. –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—ç–∫—Ç–µ—Å—Ç–∏–Ω–≥–∞

üí° –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ç–µ—Å—Ç–∏—Ä—É—é—Ç—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!
""")

choice = input("\n–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä? (Y/n): ").upper()

if choice != 'N':
    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é main.py...")
    os.system('py src/main.py')

wait_for_user()

# –®–ê–ì 9: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
print_step(9, "–ú–û–ù–ò–¢–û–†–ò–ù–ì –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò")

print("""
üì° REAL-TIME –ú–û–ù–ò–¢–û–†–ò–ù–ì

–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤–º–µ—Å—Ç–µ:

1Ô∏è‚É£  Browser Collector ‚Üí —Å–æ–±–∏—Ä–∞–µ—Ç —Å–ø–∏–Ω—ã
2Ô∏è‚É£  API Server ‚Üí –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ
3Ô∏è‚É£  Logger ‚Üí –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
4Ô∏è‚É£  Error Tracker ‚Üí –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ—à–∏–±–∫–∏
5Ô∏è‚É£  Dashboard ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—ë –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

üî• –ì–û–†–Ø–ß–ò–ï –°–°–´–õ–ö–ò:

üìä –ì–ª–∞–≤–Ω—ã–π Dashboard:
   http://localhost:8080/dashboard.html

üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤:
   http://localhost:8080/logs_dashboard.html

üîç API Health:
   http://localhost:5000/api/health

üìâ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
   http://localhost:5000/api/statistics

üí¨ –ß–∞—Ç (team collaboration):
   –í—Å—Ç—Ä–æ–µ–Ω –≤ –≥–ª–∞–≤–Ω—ã–π Dashboard
""")

print("\nüåê –û—Ç–∫—Ä—ã–≤–∞—é –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
time.sleep(1)

pages = [
    'http://localhost:8080/dashboard.html',
    'http://localhost:8080/logs_dashboard.html',
]

for page in pages:
    os.system(f'start {page}')
    time.sleep(1)

wait_for_user()

# –®–ê–ì 10: –ò—Ç–æ–≥–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
print_step(10, "–ò–¢–û–ì–ò –ò –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò")

print("""
üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –í–´ –û–°–í–û–ò–õ–ò –°–ò–°–¢–ï–ú–£ RULETTT!

‚úÖ –ß–¢–û –í–´ –¢–ï–ü–ï–†–¨ –£–ú–ï–ï–¢–ï:

   1. –ó–∞–ø—É—Å–∫–∞—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Å–∏—Å—Ç–µ–º—ã
   2. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ª–æ–≥–∏ –∏ –æ—à–∏–±–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
   3. –°–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ–∞–ª—å–Ω–æ–π —Ä—É–ª–µ—Ç–∫–∏
   4. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
   5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
   6. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏

üìö –ü–û–õ–ï–ó–ù–´–ï –§–ê–ô–õ–´:

   üìñ QUICKSTART.md - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
   üìñ LOGGING_GUIDE.md - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—é
   üìñ TEST_REPORT.md - –û—Ç—á—ë—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
   üìñ README.md - –û–±—â–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

üõ†Ô∏è –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´:

   # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë
   START_RULETTT.bat

   # –¢–µ—Å—Ç—ã
   py RUN_ALL_TESTS.py      # –í—Å–µ —Ç–µ—Å—Ç—ã
   py SMOKE_TEST.py          # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
   py test_logging.py        # –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

   # –†–∞–±–æ—Ç–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π
   py src/main.py            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
   py api_server.py          # API —Å–µ—Ä–≤–µ—Ä
   py -m http.server 8080    # –í–µ–±-—Å–µ—Ä–≤–µ—Ä

üí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:

   1. –°–æ–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–≤—ã–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∫–∞–∑–∏–Ω–æ
   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –∞–ª–µ—Ä—Ç–æ–≤ (Task 6)
   4. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ —Å Telegram –±–æ—Ç–æ–º
   5. –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤ user_strategies.py

üîó LINKS:

   Dashboard:  http://localhost:8080/dashboard.html
   Logs:       http://localhost:8080/logs_dashboard.html
   API:        http://localhost:5000/api/health
   Docs:       https://github.com/nikolaspablo92-prog/RULETTT

‚≠ê –í–ê–ñ–ù–û:

   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7 –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
   ‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
   ‚Ä¢ –õ–æ–≥–∏ —Ä–æ—Ç–∏—Ä—É—é—Ç—Å—è (10MB —Ñ–∞–π–ª—ã)
   ‚Ä¢ –û—à–∏–±–∫–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è
   ‚Ä¢ Dashboard –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

‚ù§Ô∏è –°–ü–ê–°–ò–ë–û –ó–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï RULETTT!

–£–¥–∞—á–∏ –≤ –∞–Ω–∞–ª–∏–∑–µ —Ä—É–ª–µ—Ç–∫–∏! üé∞
""")

print("\n" + "=" * 80)
print("  üé≤ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ! üé≤")
print("=" * 80 + "\n")

input("–ù–∞–∂–º–∏—Ç–µ ENTER –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
